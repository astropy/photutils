[tox]
envlist =
    py{38,39,310,311}-test{,-alldeps,-devdeps,-oldestdeps}{,-cov}
    py{38,39,310,311}-test-numpy{118,119,120,121,122,123}
    py{38,39,310,311}-test-astropy{50,lts}
    circleci_32bit
    build_docs
    linkcheck
    codestyle
    pep517
    bandit
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    MPLBACKEND=agg
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scipy-wheels-nightly/simple

# Pass through the following environment variables which may be needed
# for the CI
passenv =
    HOME
    WINDIR
    LC_ALL
    LC_CTYPE
    CC
    CI

# Run the tests in a temporary directory to make sure that we don't
# import this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g., test-devdeps-cov. Lines below starting
# with factor: will only take effect if that factor is included in the
# environment name. To see a list of example environments that can be run,
# along with a description, run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy118: with numpy 1.18.*
    numpy119: with numpy 1.19.*
    numpy120: with numpy 1.20.*
    numpy121: with numpy 1.21.*
    numpy122: with numpy 1.22.*
    numpy123: with numpy 1.23.*

    astropy50: with astropy 5.0.*
    astropylts: with the latest astropy LTS

# The following provides some specific pinnings for key packages
deps =
    circleci_32bit: numpy==1.20.*
    circleci_32bit: git+https://github.com/astropy/astropy.git#egg=astropy

    cov: coverage

    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*
    numpy120: numpy==1.20.*
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
    numpy123: numpy==1.23.*

    astropy50: astropy==5.0.*
    astropylts: astropy==5.0.*

    oldestdeps: numpy==1.18
    oldestdeps: astropy==5.0
    oldestdeps: scipy==1.6.0
    oldestdeps: matplotlib==3.1
    oldestdeps: scikit-image==0.14.2
    oldestdeps: scikit-learn==0.19
    oldestdeps: gwcs==0.12
    oldestdeps: pytest-astropy==0.4

    devdeps: numpy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: git+https://github.com/spacetelescope/gwcs.git

# The following indicates which extras_require from setup.cfg will be
# installed
extras =
    test: test
    alldeps: all
    build_docs: docs

commands =
    devdeps: pip install -U -i https://pypi.anaconda.org/astropy/simple astropy --pre
    devdeps: pip install -U -i https://pypi.anaconda.org/scipy-wheels-nightly/simple scikit-learn
    pip freeze
    !cov: pytest --pyargs photutils {toxinidir}/docs {posargs}
    cov: pytest --pyargs photutils {toxinidir}/docs --cov photutils --cov-config={toxinidir}/setup.cfg {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:circleci_32bit]
changedir = .tmp/{envname}
description = 32-bit CircleCI tests
extras = test
commands =
    pip freeze
    !cov: pytest --pyargs photutils {toxinidir}/docs {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 photutils --count --max-line-length=100

[testenv:pep517]
skip_install = true
changedir = .
description = PEP 517
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/* --strict

[testenv:bandit]
skip_install = true
changedir = .
description = security check with bandit
deps = bandit
commands = bandit -r photutils -c .bandit.yaml
