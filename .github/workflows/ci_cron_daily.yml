name: Daily Cron Tests

on:
  schedule:
    # run at 6am UTC on Tue-Fri (complete tests are run every Monday)
    - cron: '0 6 * * 2-5'
  pull_request:
    # We also want this workflow triggered if the 'Daily CI' label is added
    # or present when PR is updated
    types:
      - synchronize
      - labeled
  push:
    tags:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TOXARGS: '-v'

permissions:
  contents: read

jobs:
  tests:
    if: (github.repository == 'astropy/photutils' && (github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'Daily CI')))
    name: ${{ matrix.prefix }} ${{ matrix.os }}, ${{ matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.12'
            tox_env: 'linkcheck'
            allow_failure: false
            prefix: ''

          - os: ubuntu-latest
            python: '3.13'
            tox_env: 'py313-test-devdeps'
            toxposargs: --remote-data=any
            allow_failure: true
            prefix: '(Allowed failure)'

    steps:
    - name: Check out repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
      with:
        python-version: ${{ matrix.python }}
        allow-prereleases: true
    - name: Install base dependencies
      run: python -m pip install --upgrade pip setuptools tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: Run tests
      run: python -m tox -e ${{ matrix.tox_env }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: ${{ contains(matrix.tox_env, '-cov') }}
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574  # v5.4.0
      with:
        files: ./coverage.xml
        verbose: true
