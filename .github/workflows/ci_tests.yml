name: CI Tests

on:
  push:
  pull_request:
  schedule:
    # run every Monday at 6am UTC
    - cron: '0 6 * * 1'

env:
  SETUP_XVFB: True  # avoid issues if mpl tries to open a GUI window
  TOXARGS: '-v'

jobs:
  ci-tests:
    name: ${{ matrix.os }}, ${{ matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    if: "!(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[ci skip]'))"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.7'
            tox_env: 'py37-test-alldeps'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps-cov'
            use_remote_data: true
          - os: macos-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps'
          - os: windows-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'py38-test'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'codestyle'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'build_docs'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'linkcheck'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'bandit'
          - os: ubuntu-latest
            python: '3.7'
            tox_env: 'py37-test-alldeps-astropylts-numpy118'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps-devdeps'

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Install graphviz dependency
      if: "endsWith(matrix.tox_env, 'build_docs')"
      run: sudo apt-get -y install graphviz
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: Run tests
      if: "! matrix.use_remote_data"
      run: tox -e ${{ matrix.tox_env }}
    - name: Run tests with remote data
      if: "matrix.use_remote_data"
      run: tox -e ${{ matrix.tox_env }} -- --remote-data=any
    - name: Upload coverage to codecov
      if: "endsWith(matrix.tox_env, '-cov')"
      uses: codecov/codecov-action@v1.0.13
      with:
        file: ./coverage.xml
